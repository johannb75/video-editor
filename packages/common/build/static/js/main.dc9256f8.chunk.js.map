{"version":3,"sources":["helpers/atoms.ts","helpers/defaults.ts","pages/Draw.tsx","pages/Initial.tsx","pages/Text.tsx","helpers/fabircEraserBursh.ts","components/Canvas.tsx","components/Video.tsx","components/Container.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LineTypes","AppScreens","scriptState","atom","key","default","pageState","INITIAL","variablesState","FPS","videoDuration","playVideo","currentFrame","undefined","isDrawing","erasing","lineOptionsState","color","background","fontFamily","fontWeight","fontStyle","textAlign","size","type","NORMAL","DefaultColors","DrawPage","canvasRef","setPage","useSetRecoilState","useRecoilState","setVariables","lineOptions","setLineOptions","useEffect","vars","onClick","value","onChange","ev","opts","currentTarget","valueAsNumber","width","circleSize","circleSpacing","colors","onChangeComplete","hex","InitialPage","videoRef","variables","DRAW","current","console","log","id","addText","textId","TEXT","clear","undo","redo","getFabric","toObject","objects","Math","round","currentTime","TextPage","selectedTextId","useRecoilValue","useState","setText","textObject","useRef","exitPage","placeholder","trim","text","changeObjectValue","fill","ErasedGroup","fabric","util","createClass","Group","original","erasedPath","initialize","options","isAlreadyGrouped","this","callSuper","_calcBounds","onlyWidthHeight","aX","aY","props","jLen","length","o","setCoords","j","push","oCoords","x","y","_getBounds","EraserBrush","PencilBrush","_finalizeAndAddPath","canvas","contextTop","closePath","decimate","_points","decimatePoints","pathData","convertPointsToSVGPath","join","path","createPath","globalCompositeOperation","selectable","evented","absolutePositioned","getObjects","filter","obj","intersectsWithObject","mergedGroup","newPath","left","top","newData","toDataURL","withoutTransform","Image","fromURL","fabricImage","set","remove","add","clearContext","renderAll","_resetShadow","requestRenderAll","EditCanvas","React","forwardRef","ref","onTextDoubleClick","setScript","currentFrameRef","fabricCanvasRef","resizeCanvas","w","window","innerWidth","h","innerHeight","height","setWidth","setHeight","calcOffset","useImperativeHandle","uuidv4","textbox","IText","textBackgroundColor","center","getObject","i","object","getCanvas","isDrawingMode","freeDrawingBrush","PSBrush","Canvas","brush","addEventListener","on","opt","script","frame","script_clone","t","show","hasControls","target","removeEventListener","style","position","zIndex","displayName","BackgroundVideo","play","pause","src","loop","Container","page","started","setStart","className","backgroundColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc9256f8.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\nimport { IScripting } from \"./types/scripting\";\r\n\r\nenum LineTypes {\r\n\tNORMAL,\r\n\t// TODO: implement neon\r\n\tNEON,\r\n}\r\n\r\ninterface ILineOptions {\r\n\ttype: LineTypes;\r\n\tsize: number;\r\n\tcolor: string;\r\n}\r\n\r\ninterface ITextOptions {\r\n\tbackground: string;\r\n\tcolor: string;\r\n\tfontFamily: string;\r\n\tfontWeight: number;\r\n\tfontStyle: string;\r\n\ttextAlign: \"center\" | \"left\" | \"right\";\r\n}\r\n\r\ninterface IVariables {\r\n\treadonly FPS: number;\r\n\tvideoDuration: number;\r\n\tisDrawing: boolean;\r\n\terasing: boolean;\r\n\tplayVideo: boolean;\r\n\tcurrentFrame?: number;\r\n\tselectedTextId?: string;\r\n}\r\n\r\nexport enum AppScreens {\r\n\tINITIAL,\r\n\tTEXT,\r\n\tDRAW,\r\n\tIMAGE_UPLOAD,\r\n\tDUO_UPLOAD,\r\n\tSOUND_CHANGE,\r\n\tVIDEO_TRIM,\r\n\tAUDIO_TRIM,\r\n}\r\n\r\nexport const scriptState = atom<IScripting>({\r\n\tkey: \"scriptState\",\r\n\tdefault: {},\r\n});\r\n\r\nexport const pageState = atom<AppScreens>({\r\n\tkey: \"pageState\",\r\n\tdefault: AppScreens.INITIAL,\r\n});\r\n\r\nexport const variablesState = atom<IVariables>({\r\n\tkey: \"variablesState\",\r\n\tdefault: {\r\n\t\tFPS: 30,\r\n\t\tvideoDuration: 11.863,\r\n\t\tplayVideo: false,\r\n\t\tcurrentFrame: undefined,\r\n\t\tisDrawing: false,\r\n\t\terasing: false,\r\n\t},\r\n});\r\n\r\nexport const textOptionsState = atom<ITextOptions>({\r\n\tkey: \"textOptionsState\",\r\n\tdefault: {\r\n\t\tcolor: \"#FFFFFF\",\r\n\t\tbackground: \"#272A2BDE\",\r\n\t\tfontFamily: \"Arial\",\r\n\t\tfontWeight: 500,\r\n\t\tfontStyle: \"normal\",\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n});\r\n\r\nexport const lineOptionsState = atom<ILineOptions>({\r\n\tkey: \"lineOptionsState\",\r\n\tdefault: {\r\n\t\tcolor: \"#FFFFFF\",\r\n\t\tsize: 12,\r\n\t\ttype: LineTypes.NORMAL,\r\n\t},\r\n});\r\n","export const DefaultColors = [\r\n\t\"#ffffff\",\r\n\t\"#000000\",\r\n\t\"#f44336\",\r\n\t\"#e91e63\",\r\n\t\"#9c27b0\",\r\n\t\"#673ab7\",\r\n\t\"#3f51b5\",\r\n\t\"#2196f3\",\r\n\t\"#03a9f4\",\r\n\t\"#00bcd4\",\r\n\t\"#009688\",\r\n\t\"#4caf50\",\r\n\t\"#8bc34a\",\r\n\t\"#cddc39\",\r\n\t\"#ffeb3b\",\r\n\t\"#ffc107\",\r\n\t\"#ff9800\",\r\n\t\"#ff5722\",\r\n\t\"#795548\",\r\n\t\"#607d8b\",\r\n];\r\n","import React, { useEffect } from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { CirclePicker, ColorResult } from \"react-color\";\r\nimport { IEditCanvasRef } from \"../components/Canvas\";\r\nimport {\r\n\tAppScreens,\r\n\tlineOptionsState,\r\n\tpageState,\r\n\tvariablesState,\r\n} from \"../helpers/atoms\";\r\nimport { DefaultColors } from \"../helpers/defaults\";\r\n\r\ninterface Props {\r\n\tcanvasRef: React.RefObject<IEditCanvasRef>;\r\n}\r\n\r\nexport const DrawPage: React.FC<Props> = ({ canvasRef }) => {\r\n\tconst setPage = useSetRecoilState(pageState);\r\n\tconst [_, setVariables] = useRecoilState(variablesState);\r\n\tconst [lineOptions, setLineOptions] = useRecoilState(lineOptionsState);\r\n\r\n\tconst exitPage = () => {\r\n\t\tsetVariables((vars) => ({ ...vars, isDrawing: false }));\r\n\t\treturn setPage(AppScreens.INITIAL);\r\n\t};\r\n\r\n\tconst colorChangeHandler = ({ hex: color }: ColorResult) => {\r\n\t\treturn setLineOptions((opts) => ({\r\n\t\t\t...opts,\r\n\t\t\tcolor,\r\n\t\t}));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetVariables((vars) => ({ ...vars, isDrawing: true }));\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={exitPage}>Exit</button>\r\n\t\t\t<button\r\n\t\t\t\tonClick={() =>\r\n\t\t\t\t\tsetVariables((vars) => ({ ...vars, erasing: true }))\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\tErasing\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tonClick={() =>\r\n\t\t\t\t\tsetVariables((vars) => ({ ...vars, erasing: false }))\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\tDraw\r\n\t\t\t</button>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tvalue={lineOptions.size}\r\n\t\t\t\tonChange={(ev) =>\r\n\t\t\t\t\tsetLineOptions((opts) => ({\r\n\t\t\t\t\t\t...opts,\r\n\t\t\t\t\t\tsize: ev.currentTarget.valueAsNumber,\r\n\t\t\t\t\t}))\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t\t<CirclePicker\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\tcircleSize={22}\r\n\t\t\t\tcircleSpacing={10}\r\n\t\t\t\tcolors={DefaultColors}\r\n\t\t\t\tcolor={lineOptions.color}\r\n\t\t\t\tonChangeComplete={colorChangeHandler}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { IEditCanvasRef } from \"../components/Canvas\";\r\nimport { AppScreens, pageState, variablesState } from \"../helpers/atoms\";\r\n\r\ninterface Props {\r\n\tcanvasRef: React.RefObject<IEditCanvasRef>;\r\n\tvideoRef: React.RefObject<HTMLVideoElement>;\r\n}\r\n\r\nexport const InitialPage: React.FC<Props> = ({ canvasRef, videoRef }) => {\r\n\tconst setPage = useSetRecoilState(pageState);\r\n\tconst [variables, setVariables] = useRecoilState(variablesState);\r\n\r\n\tconst createText = () => {\r\n\t\tif (!canvasRef.current) return console.log(\"canvas not initialized\");\r\n\t\tconst id = canvasRef.current.addText(\"\");\r\n\t\tsetVariables((vars) => ({ ...vars, textId: id }));\r\n\t\treturn setPage(AppScreens.TEXT);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={() => setPage(AppScreens.DRAW)}>Draw</button>\r\n\t\t\t<button onClick={createText}>Text</button>\r\n\t\t\t<button onClick={canvasRef.current?.clear}>Clear All</button>\r\n\t\t\t<button onClick={canvasRef.current?.undo}>Undo</button>\r\n\t\t\t<button onClick={canvasRef.current?.redo}>Redo</button>\r\n\t\t\t<button\r\n\t\t\t\tonClick={() =>\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\tcanvasRef.current?.getFabric()?.toObject([\"id\"]).objects\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\tTo JSON\r\n\t\t\t</button>\r\n\t\t\t{variables.playVideo && !variables.currentFrame ? (\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\tsetVariables((vars) => ({\r\n\t\t\t\t\t\t\t...vars,\r\n\t\t\t\t\t\t\tplayVideo: false,\r\n\t\t\t\t\t\t\tcurrentFrame:\r\n\t\t\t\t\t\t\t\tMath.round(videoRef.current?.currentTime!) *\r\n\t\t\t\t\t\t\t\t\tvars.FPS ?? 1,\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\tPin frame\r\n\t\t\t\t</button>\r\n\t\t\t) : (\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\tsetVariables((vars) => ({\r\n\t\t\t\t\t\t\t...vars,\r\n\t\t\t\t\t\t\tplayVideo: true,\r\n\t\t\t\t\t\t\tcurrentFrame: undefined,\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\tUnpin frame\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { ChangeEventHandler, useEffect, useRef, useState } from \"react\";\r\nimport { CirclePicker } from \"react-color\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { IEditCanvasRef } from \"../components/Canvas\";\r\nimport { AppScreens, pageState, variablesState } from \"../helpers/atoms\";\r\n\r\ninterface Props {\r\n\tcanvasRef: React.RefObject<IEditCanvasRef>;\r\n}\r\n\r\nexport const TextPage: React.FC<Props> = ({ canvasRef }) => {\r\n\t// global state\r\n\tconst setPage = useSetRecoilState(pageState);\r\n\tconst { selectedTextId } = useRecoilValue(variablesState)!;\r\n\r\n\t// local state\r\n\tconst [text, setText] = useState<string>(\"\");\r\n\tconst textObject = useRef<fabric.IText>();\r\n\r\n\tconst exitPage = () => {\r\n\t\tsetPage(AppScreens.INITIAL);\r\n\t};\r\n\r\n\tif (!selectedTextId || !canvasRef.current) {\r\n\t\texitPage();\r\n\t\treturn <>Redirecting...</>;\r\n\t}\r\n\r\n\t// useEffect(() => {\r\n\t// \ttextObject.current = canvasRef.current?.getObject(selectedTextId) as\r\n\t// \t\t| fabric.IText\r\n\t// \t\t| undefined;\r\n\t// \tsetText(textObject.current!.text ?? \"\");\r\n\r\n\t// \t// hide object\r\n\t// \ttextObject.current!.opacity = 0;\r\n\t// \tcanvasRef.current?.getFabric()?.renderAll();\r\n\r\n\t// \t// show object\r\n\t// \treturn () => {\r\n\t// \t\ttextObject.current!.opacity = 1;\r\n\t// \t\tcanvasRef.current?.getFabric()?.renderAll();\r\n\t// \t};\r\n\t// }, []);\r\n\r\n\tconst changeObjectValue = (text: string) => {\r\n\t\ttextObject.current!.text = text.trim();\r\n\t};\r\n\r\n\tconst textChangeHandler: ChangeEventHandler<HTMLTextAreaElement> = (ev) => {\r\n\t\tconst value = ev.currentTarget.value.trim();\r\n\t\tsetText(value);\r\n\t\treturn changeObjectValue(value);\r\n\t};\r\n\r\n\tconst colorChangeHandler: ChangeEventHandler<HTMLInputElement> = (ev) => {\r\n\t\ttextObject.current!.fill = ev.currentTarget.value;\r\n\t\treturn ev.currentTarget.value;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={exitPage}>Exit</button>\r\n\t\t\t<textarea\r\n\t\t\t\tplaceholder=\"Text goes here ...\"\r\n\t\t\t\tonChange={textChangeHandler}\r\n\t\t\t/>\r\n\t\t\t<input type=\"color\" onChange={colorChangeHandler} />\r\n\t\t</div>\r\n\t);\r\n};\r\n","// Source: https://github.com/fabricjs/fabric.js/issues/1225#issuecomment-499620550\r\n\r\nimport { fabric } from \"fabric\";\r\n\r\n/*\r\n * Note: Might not work with versions other than 3.1.0\r\n *\r\n * Made it so that the bound is calculated on the original only\r\n */\r\nconst ErasedGroup = fabric.util.createClass(fabric.Group, {\r\n\toriginal: null,\r\n\terasedPath: null,\r\n\tinitialize: function (\r\n\t\toriginal: any,\r\n\t\terasedPath: any,\r\n\t\toptions: any,\r\n\t\tisAlreadyGrouped: any\r\n\t) {\r\n\t\tthis.original = original;\r\n\t\tthis.erasedPath = erasedPath;\r\n\t\tthis.callSuper(\r\n\t\t\t\"initialize\",\r\n\t\t\t[this.original, this.erasedPath],\r\n\t\t\toptions,\r\n\t\t\tisAlreadyGrouped\r\n\t\t);\r\n\t},\r\n\r\n\t_calcBounds: function (onlyWidthHeight: any) {\r\n\t\tconst aX = [],\r\n\t\t\taY = [],\r\n\t\t\tprops = [\"tr\", \"br\", \"bl\", \"tl\"],\r\n\t\t\tjLen = props.length,\r\n\t\t\tignoreZoom = true;\r\n\r\n\t\tlet o = this.original;\r\n\t\to.setCoords(ignoreZoom);\r\n\t\tfor (let j = 0; j < jLen; j++) {\r\n\t\t\taX.push(o.oCoords[props[j]].x);\r\n\t\t\taY.push(o.oCoords[props[j]].y);\r\n\t\t}\r\n\r\n\t\tthis._getBounds(aX, aY, onlyWidthHeight);\r\n\t},\r\n});\r\n\r\n/*\r\n * Note1: Might not work with versions other than 3.1.0\r\n *\r\n * Made it so that the path will be 'merged' with other objects\r\n *  into a customized group and has a 'destination-out' composition\r\n */\r\nexport const EraserBrush = fabric.util.createClass(fabric.PencilBrush, {\r\n\t/**\r\n\t * On mouseup after drawing the path on contextTop canvas\r\n\t * we use the points captured to create an new fabric path object\r\n\t * and add it to the fabric canvas.\r\n\t */\r\n\t_finalizeAndAddPath: function () {\r\n\t\tvar ctx = this.canvas.contextTop;\r\n\t\tctx.closePath();\r\n\t\tif (this.decimate) {\r\n\t\t\tthis._points = this.decimatePoints(this._points, this.decimate);\r\n\t\t}\r\n\t\tvar pathData = this.convertPointsToSVGPath(this._points).join(\"\");\r\n\t\tif (pathData === \"M 0 0 Q 0 0 0 0 L 0 0\") {\r\n\t\t\t// do not create 0 width/height paths, as they are\r\n\t\t\t// rendered inconsistently across browsers\r\n\t\t\t// Firefox 4, for example, renders a dot,\r\n\t\t\t// whereas Chrome 10 renders nothing\r\n\t\t\tthis.canvas.requestRenderAll();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// use globalCompositeOperation to 'fake' eraser\r\n\t\tvar path = this.createPath(pathData);\r\n\t\tpath.globalCompositeOperation = \"destination-out\";\r\n\t\tpath.selectable = false;\r\n\t\tpath.evented = false;\r\n\t\tpath.absolutePositioned = true;\r\n\r\n\t\t// grab all the objects that intersects with the path\r\n\t\tconst objects = this.canvas\r\n\t\t\t.getObjects()\r\n\t\t\t.filter((obj: fabric.Object) => {\r\n\t\t\t\t// if (obj instanceof fabric.Textbox) return false;\r\n\t\t\t\t// if (obj instanceof fabric.IText) return false;\r\n\t\t\t\tif (!obj.intersectsWithObject(path)) return false;\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\r\n\t\tif (objects.length > 0) {\r\n\t\t\t// merge those objects into a group\r\n\t\t\tconst mergedGroup = new fabric.Group(objects);\r\n\r\n\t\t\t// This will perform the actual 'erasing'\r\n\t\t\t// NOTE: you can do this for each object, instead of doing it with a merged group\r\n\t\t\t// however, there will be a visible lag when there's many objects affected by this\r\n\t\t\tconst newPath = new ErasedGroup(mergedGroup, path);\r\n\r\n\t\t\tconst left = newPath.left;\r\n\t\t\tconst top = newPath.top;\r\n\r\n\t\t\t// convert it into a dataURL, then back to a fabric image\r\n\t\t\tconst newData = newPath.toDataURL({\r\n\t\t\t\twithoutTransform: true,\r\n\t\t\t});\r\n\t\t\tfabric.Image.fromURL(newData, (fabricImage) => {\r\n\t\t\t\tfabricImage.set({\r\n\t\t\t\t\tleft: left,\r\n\t\t\t\t\ttop: top,\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// remove the old objects then add the new image\r\n\t\t\t\tthis.canvas.remove(...objects);\r\n\t\t\t\tthis.canvas.add(fabricImage);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.canvas.clearContext(this.canvas.contextTop);\r\n\t\tthis.canvas.renderAll();\r\n\t\tthis._resetShadow();\r\n\t},\r\n});\r\n","import React, { useEffect, useImperativeHandle, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// Fabric JS\r\nimport { fabric } from \"fabric-with-gestures\";\r\nimport \"fabric-history\";\r\n\r\n// Brushes\r\nimport { PSBrush } from \"@arch-inc/fabricjs-psbrush\";\r\nimport { EraserBrush } from \"../helpers/fabircEraserBursh\";\r\n\r\n// Helpers\r\nimport {\r\n\tvariablesState,\r\n\tlineOptionsState,\r\n\tscriptState,\r\n} from \"../helpers/atoms\";\r\n\r\ninterface Props {\r\n\tonTextDoubleClick?: (obj: any) => any;\r\n}\r\n\r\ntype TFabricRef = fabric.Canvas | undefined;\r\ntype TCanvasRef = HTMLCanvasElement | null;\r\n\r\nexport interface IEditCanvasRef {\r\n\tclear?: () => void;\r\n\tundo?: () => void;\r\n\tredo?: () => void;\r\n\taddText: (text: string) => string;\r\n\tgetObject: (id: string) => fabric.Object | undefined;\r\n\tgetFabric: () => TFabricRef;\r\n\tgetCanvas: () => TCanvasRef;\r\n}\r\n\r\nconst EditCanvas = React.forwardRef<IEditCanvasRef, Props>(\r\n\t({ onTextDoubleClick }, ref) => {\r\n\t\tconst lineOptions = useRecoilValue(lineOptionsState);\r\n\t\tconst [script, setScript] = useRecoilState(scriptState);\r\n\t\tconst variables = useRecoilValue(variablesState);\r\n\r\n\t\tconst currentFrameRef = useRef<number>();\r\n\r\n\t\tconst canvasRef = useRef<HTMLCanvasElement>(null);\r\n\t\tconst fabricCanvasRef = useRef<fabric.Canvas>();\r\n\r\n\t\tconst resizeCanvas = () => {\r\n\t\t\tconst w = window.innerWidth;\r\n\t\t\tconst h = window.innerHeight;\r\n\r\n\t\t\tif (!canvasRef.current || !fabricCanvasRef.current) return;\r\n\r\n\t\t\tcanvasRef.current.width = window.innerWidth;\r\n\t\t\tcanvasRef.current.height = window.innerHeight;\r\n\r\n\t\t\tfabricCanvasRef.current.setWidth(w);\r\n\t\t\tfabricCanvasRef.current.setHeight(h);\r\n\t\t\tfabricCanvasRef.current.calcOffset();\r\n\t\t};\r\n\r\n\t\tuseImperativeHandle(ref, () => ({\r\n\t\t\tclear: () => fabricCanvasRef.current?.clear(),\r\n\t\t\tundo: () => fabricCanvasRef.current?.undo?.(),\r\n\t\t\tredo: () => fabricCanvasRef.current?.redo?.(),\r\n\t\t\taddText: (text) => {\r\n\t\t\t\tconst id = uuidv4();\r\n\t\t\t\tconst textbox = new fabric.IText(text, {\r\n\t\t\t\t\tid,\r\n\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\tfill: \"black\",\r\n\t\t\t\t\ttextBackgroundColor: \"white\",\r\n\t\t\t\t\tfontWeight: 700,\r\n\t\t\t\t\tfontFamily: \"Arial\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\tfabricCanvasRef.current?.add(textbox);\r\n\t\t\t\ttextbox.center();\r\n\t\t\t\treturn id;\r\n\t\t\t},\r\n\t\t\tgetObject: (id: string) => {\r\n\t\t\t\tconst objects = fabricCanvasRef.current?.getObjects() ?? [];\r\n\r\n\t\t\t\tfor (let i = 0; i < objects.length; i++) {\r\n\t\t\t\t\tconst object = objects[i];\r\n\t\t\t\t\tif (object?.id === id) return object;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetFabric: () => fabricCanvasRef.current,\r\n\t\t\tgetCanvas: () => canvasRef.current,\r\n\t\t}));\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tcurrentFrameRef.current = variables.currentFrame;\r\n\t\t}, [variables.currentFrame]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (fabricCanvasRef.current)\r\n\t\t\t\tfabricCanvasRef.current.isDrawingMode = variables.isDrawing;\r\n\t\t}, [variables.isDrawing]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (!fabricCanvasRef.current) return;\r\n\t\t\tif (variables.erasing) {\r\n\t\t\t\tfabricCanvasRef.current.freeDrawingBrush = new EraserBrush(\r\n\t\t\t\t\tfabricCanvasRef.current\r\n\t\t\t\t);\r\n\t\t\t\tfabricCanvasRef.current.freeDrawingBrush.color = \"#FF0000\";\r\n\t\t\t\tfabricCanvasRef.current.freeDrawingBrush.width = 20;\r\n\t\t\t} else {\r\n\t\t\t\tfabricCanvasRef.current.freeDrawingBrush = new PSBrush(\r\n\t\t\t\t\tfabricCanvasRef.current\r\n\t\t\t\t);\r\n\t\t\t\tfabricCanvasRef.current.freeDrawingBrush.color =\r\n\t\t\t\t\tlineOptions.color;\r\n\t\t\t\tfabricCanvasRef.current.freeDrawingBrush.width =\r\n\t\t\t\t\tlineOptions.size;\r\n\t\t\t\tfabricCanvasRef.current.freeDrawingBrush.globalCompositeOperation =\r\n\t\t\t\t\t\"destination-over\";\r\n\t\t\t}\r\n\t\t}, [variables.erasing]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (\r\n\t\t\t\tfabricCanvasRef.current &&\r\n\t\t\t\tlineOptions.color &&\r\n\t\t\t\t!variables.erasing\r\n\t\t\t)\r\n\t\t\t\tfabricCanvasRef.current.freeDrawingBrush.color =\r\n\t\t\t\t\tlineOptions.color;\r\n\t\t}, [lineOptions.color]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (fabricCanvasRef.current && lineOptions.size)\r\n\t\t\t\tfabricCanvasRef.current.freeDrawingBrush.width =\r\n\t\t\t\t\tlineOptions.size;\r\n\t\t}, [lineOptions.size]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\t// init fabric.js\r\n\t\t\tconst canvas = (fabricCanvasRef.current = new fabric.Canvas(\r\n\t\t\t\tcanvasRef.current\r\n\t\t\t));\r\n\r\n\t\t\t// init pressure brush\r\n\t\t\tconst brush = new PSBrush(canvas);\r\n\t\t\tbrush.color = lineOptions.color;\r\n\t\t\tbrush.width = lineOptions.size;\r\n\t\t\tcanvas.freeDrawingBrush = brush;\r\n\r\n\t\t\tresizeCanvas();\r\n\t\t\twindow.addEventListener(\"resize\", resizeCanvas, false);\r\n\r\n\t\t\t// TODO: handle events (onTextDoubleClick, onPath)\r\n\t\t\tcanvas.on(\"object:added\", function (opt) {\r\n\t\t\t\tconst id = uuidv4();\r\n\r\n\t\t\t\tsetScript((script) => {\r\n\t\t\t\t\tconst frame = currentFrameRef.current ?? 1;\r\n\t\t\t\t\tlet script_clone = { ...script };\r\n\t\t\t\t\tlet t = script_clone[frame];\r\n\r\n\t\t\t\t\tscript_clone[frame] = {\r\n\t\t\t\t\t\t...t,\r\n\t\t\t\t\t\tshow: [...(t?.show ?? []), id],\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\treturn script_clone;\r\n\t\t\t\t});\r\n\t\t\t\tif (opt.path) {\r\n\t\t\t\t\topt.path.id = id;\r\n\t\t\t\t\topt.path.hasControls = false;\r\n\t\t\t\t} else if (opt.target) {\r\n\t\t\t\t\topt.target.id = id;\r\n\t\t\t\t\topt.target.hasControls = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\twindow.removeEventListener(\"resize\", resizeCanvas, false);\r\n\t\t\t};\r\n\t\t}, []);\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tzIndex: 2,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<canvas ref={canvasRef} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nEditCanvas.displayName = \"EditCanvas\";\r\n\r\nexport default EditCanvas;\r\n","import React, { useEffect, useImperativeHandle, useRef } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { variablesState } from \"../helpers/atoms\";\r\n\r\ninterface Props {}\r\n\r\nconst BackgroundVideo = React.forwardRef<HTMLVideoElement, Props>(\r\n\t(props, ref) => {\r\n\t\tconst videoRef = useRef<HTMLVideoElement>(null);\r\n\t\tconst variables = useRecoilValue(variablesState);\r\n\r\n\t\tuseImperativeHandle(ref, () => videoRef.current!);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (variables.playVideo) videoRef.current?.play();\r\n\t\t\telse videoRef.current?.pause();\r\n\t\t}, [variables.playVideo]);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<video\r\n\t\t\t\t\tsrc=\"./test.mp4\"\r\n\t\t\t\t\tloop\r\n\t\t\t\t\tref={videoRef}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\tzIndex: 1,\r\n\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default BackgroundVideo;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\n\r\n// Helpers\r\nimport { AppScreens, pageState, variablesState } from \"../helpers/atoms\";\r\n\r\n// Pages\r\nimport { DrawPage } from \"../pages/Draw\";\r\nimport { InitialPage } from \"../pages/Initial\";\r\nimport { TextPage } from \"../pages/Text\";\r\n\r\n// Components\r\nimport EditCanvas, { IEditCanvasRef } from \"./Canvas\";\r\nimport BackgroundVideo from \"./Video\";\r\n\r\ninterface Props {}\r\n\r\nexport const Container: React.FC<Props> = (props) => {\r\n\tconst canvasRef = useRef<IEditCanvasRef>(null);\r\n\tconst videoRef = useRef<HTMLVideoElement>(null);\r\n\tconst page = useRecoilValue(pageState);\r\n\r\n\tconst setVariables = useSetRecoilState(variablesState);\r\n\tconst [started, setStart] = useState<boolean>(false);\r\n\r\n\tconst start = () => {\r\n\t\tsetStart(true);\r\n\t\treturn setVariables((vars) => ({ ...vars, playVideo: true }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"canvas_app\"\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor: \"black\",\r\n\t\t\t\theight: \"100%\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{!started ? (\r\n\t\t\t\t<button onClick={start}>Start</button>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<BackgroundVideo ref={videoRef} />\r\n\t\t\t\t\t\t<EditCanvas ref={canvasRef} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ position: \"relative\", zIndex: 3 }}>\r\n\t\t\t\t\t\t{page === AppScreens.INITIAL ? (\r\n\t\t\t\t\t\t\t<InitialPage\r\n\t\t\t\t\t\t\t\tcanvasRef={canvasRef}\r\n\t\t\t\t\t\t\t\tvideoRef={videoRef}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : page === AppScreens.DRAW ? (\r\n\t\t\t\t\t\t\t<DrawPage canvasRef={canvasRef} />\r\n\t\t\t\t\t\t) : page === AppScreens.TEXT ? (\r\n\t\t\t\t\t\t\t<TextPage canvasRef={canvasRef} />\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport RecoilDebugger from \"recoilize\";\r\nimport { Container } from \"./components/Container\";\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<RecoilRoot>\r\n\t\t\t{/* <RecoilDebugger /> */}\r\n\t\t\t<Container />\r\n\t\t</RecoilRoot>\r\n\t);\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}